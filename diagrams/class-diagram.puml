@startuml
'TODO entregar como pdf
interface Visitable {
    +accept(visitor: Visitor)
}
interface Function extends Visitable{
    +solve(): Double
}
class Variable implements Function {
    -value: Double
    -name: String
    +setValue(Number)
    +getName(): String
}
class Value implements Function {
    -value: Double
}
interface BinaryOperator extends Function {
    +getLeftOperand(): Function
    +getRightOperand(): Function
    +getSymbol(): String
}
interface UnaryOperator extends Function {
    +getOperand(): Function
    +getLeftSymbol(): String
    +getRightSymbol(): String
}
class Addition implements BinaryOperator {
    -leftChild: Function
    -rightChild: Function
}
class Subtraction implements BinaryOperator {
    -leftChild: Function
    -rightChild: Function
}
class Multiplication implements BinaryOperator {
    -leftChild: Function
    -rightChild: Function
}
class Division implements BinaryOperator {
    -leftChild: Function
    -rightChild: Function
}
class SquareRoot implements UnaryOperator {
    -child: Function
}
class Exponentiation implements BinaryOperator {
    -leftChild: Function
    -rightChild: Function
}
class AbsoluteValue implements UnaryOperator {
    -child: Function
}

interface Visitor {
    +visit(Operator)
    +visit(Variable)
    +visit(Value)
}
class FunctionPrinter implements Visitor {
    +visit(Operator)
    +visit(Variable)
    +visit(Value)
}
class VariableLister implements Visitor {
    +visit(Operator)
    +visit(Variable)
    +visit(Value)
}


Function --* BinaryOperator
Function --* UnaryOperator
Visitable -> Visitor
@enduml